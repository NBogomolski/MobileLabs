{"ast":null,"code":"var DOMParser = require('xmldom').DOMParser;\nvar rssV2Parser = require(\"./parsers/rssv2\");\nvar atomV1Parser = require(\"./parsers/atomv1\");\nvar getParser = function getParser(document) {\n  var isRssSpecification = document.getElementsByTagName('channel')[0] !== undefined;\n  var isAtomSpecification = document.getElementsByTagName('feed')[0] !== undefined;\n  if (isRssSpecification) {\n    return rssV2Parser;\n  }\n  if (isAtomSpecification) {\n    return atomV1Parser;\n  }\n  return null;\n};\nexports.parse = function (feed) {\n  return new Promise(function (resolve, reject) {\n    var document = new DOMParser({\n      errorHandler: function errorHandler(_level, msg) {\n        reject(msg);\n      }\n    }).parseFromString(feed, 'text/xml');\n    var parser = getParser(document);\n    if (!parser) {\n      reject('Unable to find any RSS element in feed');\n    }\n    var parsedFeed = parser.parse(document);\n    resolve(parsedFeed);\n  });\n};","map":{"version":3,"names":["DOMParser","require","rssV2Parser","atomV1Parser","getParser","document","isRssSpecification","getElementsByTagName","undefined","isAtomSpecification","exports","parse","feed","Promise","resolve","reject","errorHandler","_level","msg","parseFromString","parser","parsedFeed"],"sources":["C:/Users/nikbo/Semestr 6/Mobile/Lab2/rss/node_modules/react-native-rss-parser/index.js"],"sourcesContent":["const DOMParser = require('xmldom').DOMParser;\r\nconst rssV2Parser = require('./parsers/rssv2');\r\nconst atomV1Parser = require('./parsers/atomv1');\r\n\r\nconst getParser = (document) => {\r\n  const isRssSpecification =\r\n    document.getElementsByTagName('channel')[0] !== undefined;\r\n  const isAtomSpecification =\r\n    document.getElementsByTagName('feed')[0] !== undefined;\r\n\r\n  if (isRssSpecification) {\r\n    return rssV2Parser;\r\n  }\r\n\r\n  if (isAtomSpecification) {\r\n    return atomV1Parser;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexports.parse = (feed) =>\r\n  new Promise((resolve, reject) => {\r\n    const document = new DOMParser({\r\n      errorHandler: (_level, msg) => {\r\n        reject(msg);\r\n      },\r\n    }).parseFromString(feed, 'text/xml');\r\n\r\n    const parser = getParser(document);\r\n\r\n    if (!parser) {\r\n      reject('Unable to find any RSS element in feed');\r\n    }\r\n\r\n    const parsedFeed = parser.parse(document);\r\n\r\n    resolve(parsedFeed);\r\n  });\r\n"],"mappings":"AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACD,SAAS;AAC7C,IAAME,WAAW,GAAGD,OAAO,mBAAmB;AAC9C,IAAME,YAAY,GAAGF,OAAO,oBAAoB;AAEhD,IAAMG,SAAS,GAAG,SAAZA,SAASA,CAAIC,QAAQ,EAAK;EAC9B,IAAMC,kBAAkB,GACtBD,QAAQ,CAACE,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAKC,SAAS;EAC3D,IAAMC,mBAAmB,GACvBJ,QAAQ,CAACE,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAKC,SAAS;EAExD,IAAIF,kBAAkB,EAAE;IACtB,OAAOJ,WAAW;EACpB;EAEA,IAAIO,mBAAmB,EAAE;IACvB,OAAON,YAAY;EACrB;EAEA,OAAO,IAAI;AACb,CAAC;AAEDO,OAAO,CAACC,KAAK,GAAG,UAACC,IAAI;EAAA,OACnB,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;IAC/B,IAAMV,QAAQ,GAAG,IAAIL,SAAS,CAAC;MAC7BgB,YAAY,EAAE,SAAAA,aAACC,MAAM,EAAEC,GAAG,EAAK;QAC7BH,MAAM,CAACG,GAAG,CAAC;MACb;IACF,CAAC,CAAC,CAACC,eAAe,CAACP,IAAI,EAAE,UAAU,CAAC;IAEpC,IAAMQ,MAAM,GAAGhB,SAAS,CAACC,QAAQ,CAAC;IAElC,IAAI,CAACe,MAAM,EAAE;MACXL,MAAM,CAAC,wCAAwC,CAAC;IAClD;IAEA,IAAMM,UAAU,GAAGD,MAAM,CAACT,KAAK,CAACN,QAAQ,CAAC;IAEzCS,OAAO,CAACO,UAAU,CAAC;EACrB,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}